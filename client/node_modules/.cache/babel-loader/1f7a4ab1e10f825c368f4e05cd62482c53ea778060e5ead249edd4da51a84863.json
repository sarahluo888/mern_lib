{"ast":null,"code":"var _jsxFileName = \"/Users/sarr/mern_lib/client/src/components/recordList.js\",\n  _s = $RefreshSig$();\nimport { GridTile } from \"material-ui/GridList\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookEntry = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.book.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.book.author\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.book.genre\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.book.publicationYear\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.book.availability ? \"Available\" : \"Not Available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-link\",\n      to: `/edit/${props.book.book_id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => {\n        props.deleteBook(props.book.book_id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this)\n//  <tr>\n//    <td>{props.record.name}</td>\n//    <td>{props.record.position}</td>\n//    <td>{props.record.level}</td>\n//    <td>\n//      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n//      <button className=\"btn btn-link\"\n//        onClick={() => {\n//          props.deleteRecord(props.record._id);\n//        }}\n//      >\n//        Delete\n//      </button>\n//    </td>\n//  </tr>\n;\n_c = BookEntry;\nexport default function BookList() {\n  _s();\n  const [books, setBooks] = useState([]);\n\n  // Fetch books from the database\n  // useEffect(() => {\n  //   async function fetchBooks() {\n  //     try {\n  //       const response = await fetch(\"http://localhost:5050/books\");\n  //       if (!response.ok) {\n  //         throw new Error(`HTTP error! status: ${response.status}`);\n  //       }\n  //       const data = await response.json();\n  //       setBooks(data);\n  //     } catch (error) {\n  //       console.error(\"Error fetching books:\", error);\n  //     }\n  //   }\n\n  //   fetchBooks();\n  // }, []);\n\n  useEffect(() => {\n    async function getBooks() {\n      const response = await fetch(`http://localhost:5050/books/`);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const data = await response.json();\n      setBooks(data);\n    }\n    getBooks();\n    return;\n  }, [books.length]);\n\n  // Delete book\n  async function deleteBook(bookId) {\n    try {\n      await fetch(`http://localhost:5050/books/${bookId}`, {\n        method: \"DELETE\"\n      });\n      setBooks(books.filter(book => book.book_id !== bookId));\n    } catch (error) {\n      console.error(\"Error deleting book:\", error);\n    }\n  }\n\n  // export default function RecordList() {\n  //  const [records, setRecords] = useState([]);\n\n  //  // This method fetches the records from the database.\n  //  useEffect(() => {\n  //    async function getRecords() {\n  //      const response = await fetch(`http://localhost:5050/record/`);\n\n  //      if (!response.ok) {\n  //        const message = `An error occurred: ${response.statusText}`;\n  //        window.alert(message);\n  //        return;\n  //      }\n\n  //      const records = await response.json();\n  //      setRecords(records);\n  //    }\n\n  //    getRecords();\n\n  //    return;\n  //  }, [records.length]);\n\n  //  // This method will delete a record\n  //  async function deleteRecord(id) {\n  //    await fetch(`http://localhost:5050/record/${id}`, {\n  //      method: \"DELETE\"\n  //    });\n\n  //    const newRecords = records.filter((el) => el._id !== id);\n  //    setRecords(newRecords);\n  //  }\n\n  // This method will map out the records on the table\n  //  function recordList() {\n  //    return records.map((record) => {\n  //      return (\n  //        <Record\n  //          record={record}\n  //          deleteRecord={() => deleteRecord(record._id)}\n  //          key={record._id}\n  //        />\n  //      );\n  //    });\n  //  }\n  function renderBookList() {\n    return books.map(book => /*#__PURE__*/_jsxDEV(BookEntry, {\n      book: book,\n      deleteBook: () => deleteBook(book.book_id)\n    }, book.book_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this));\n  }\n\n  // This following section will display the table with the records of individuals.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Book List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Publication Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Availability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderBookList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 3\n  }, this)\n  //  <div>\n  //    <h3>Record List</h3>\n  //    <table className=\"table\" style={{ marginTop: 20 }}>\n  //      <thead>\n  //        <tr>\n  //          <th>Name</th>\n  //          <th>Position</th>\n  //          <th>Level</th>\n  //          <th>Action</th>\n  //        </tr>\n  //      </thead>\n  //      <tbody>{recordList()}</tbody>\n  //    </table>\n  //  </div>\n  ;\n}\n_s(BookList, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n_c2 = BookList;\nvar _c, _c2;\n$RefreshReg$(_c, \"BookEntry\");\n$RefreshReg$(_c2, \"BookList\");","map":{"version":3,"names":["GridTile","React","useEffect","useState","Link","jsxDEV","_jsxDEV","BookEntry","props","children","book","title","fileName","_jsxFileName","lineNumber","columnNumber","author","genre","publicationYear","availability","className","to","book_id","onClick","deleteBook","_c","BookList","_s","books","setBooks","getBooks","response","fetch","ok","message","statusText","window","alert","data","json","length","bookId","method","filter","error","console","renderBookList","map","style","marginTop","_c2","$RefreshReg$"],"sources":["/Users/sarr/mern_lib/client/src/components/recordList.js"],"sourcesContent":["import { GridTile } from \"material-ui/GridList\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst BookEntry = (props) => (\n  <tr>\n    <td>{props.book.title}</td>\n    <td>{props.book.author}</td>\n    <td>{props.book.genre}</td>\n    <td>{props.book.publicationYear}</td>\n    <td>{props.book.availability ? \"Available\" : \"Not Available\"}</td>\n    <td>\n      <Link className=\"btn btn-link\" to={`/edit/${props.book.book_id}`}>Edit</Link> |\n      <button className=\"btn btn-link\"\n        onClick={() => {\n          props.deleteBook(props.book.book_id);\n        }}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n//  <tr>\n//    <td>{props.record.name}</td>\n//    <td>{props.record.position}</td>\n//    <td>{props.record.level}</td>\n//    <td>\n//      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n//      <button className=\"btn btn-link\"\n//        onClick={() => {\n//          props.deleteRecord(props.record._id);\n//        }}\n//      >\n//        Delete\n//      </button>\n//    </td>\n//  </tr>\n);\n\nexport default function BookList() {\n  const [books, setBooks] = useState([]);\n\n  // Fetch books from the database\n  // useEffect(() => {\n  //   async function fetchBooks() {\n  //     try {\n  //       const response = await fetch(\"http://localhost:5050/books\");\n  //       if (!response.ok) {\n  //         throw new Error(`HTTP error! status: ${response.status}`);\n  //       }\n  //       const data = await response.json();\n  //       setBooks(data);\n  //     } catch (error) {\n  //       console.error(\"Error fetching books:\", error);\n  //     }\n  //   }\n\n  //   fetchBooks();\n  // }, []);\n\n   useEffect(() => {\n   async function getBooks() {\n     const response = await fetch(`http://localhost:5050/books/`);\n\n     if (!response.ok) {\n       const message = `An error occurred: ${response.statusText}`;\n       window.alert(message);\n       return;\n     }\n\n     const data = await response.json();\n     setBooks(data);\n   }\n\n   getBooks();\n\n   return;\n }, [books.length]);\n\n  // Delete book\n  async function deleteBook(bookId) {\n    try {\n      await fetch(`http://localhost:5050/books/${bookId}`, {\n        method: \"DELETE\"\n      });\n      setBooks(books.filter((book) => book.book_id !== bookId));\n    } catch (error) {\n      console.error(\"Error deleting book:\", error);\n    }\n  }\n\n// export default function RecordList() {\n//  const [records, setRecords] = useState([]);\n\n//  // This method fetches the records from the database.\n//  useEffect(() => {\n//    async function getRecords() {\n//      const response = await fetch(`http://localhost:5050/record/`);\n\n//      if (!response.ok) {\n//        const message = `An error occurred: ${response.statusText}`;\n//        window.alert(message);\n//        return;\n//      }\n\n//      const records = await response.json();\n//      setRecords(records);\n//    }\n\n//    getRecords();\n\n//    return;\n//  }, [records.length]);\n\n//  // This method will delete a record\n//  async function deleteRecord(id) {\n//    await fetch(`http://localhost:5050/record/${id}`, {\n//      method: \"DELETE\"\n//    });\n\n//    const newRecords = records.filter((el) => el._id !== id);\n//    setRecords(newRecords);\n//  }\n\n // This method will map out the records on the table\n//  function recordList() {\n//    return records.map((record) => {\n//      return (\n//        <Record\n//          record={record}\n//          deleteRecord={() => deleteRecord(record._id)}\n//          key={record._id}\n//        />\n//      );\n//    });\n//  }\nfunction renderBookList() {\n  return books.map((book) => (\n    <BookEntry\n      book={book}\n      deleteBook={() => deleteBook(book.book_id)}\n      key={book.book_id}\n    />\n  ));\n}\n\n // This following section will display the table with the records of individuals.\n return (\n  <div>\n  <h3>Book List</h3>\n  <table className=\"table\" style={{ marginTop: 20 }}>\n    <thead>\n      <tr>\n        <th>Title</th>\n        <th>Author</th>\n        <th>Genre</th>\n        <th>Publication Year</th>\n        <th>Availability</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>{renderBookList()}</tbody>\n  </table>\n</div>\n  //  <div>\n  //    <h3>Record List</h3>\n  //    <table className=\"table\" style={{ marginTop: 20 }}>\n  //      <thead>\n  //        <tr>\n  //          <th>Name</th>\n  //          <th>Position</th>\n  //          <th>Level</th>\n  //          <th>Action</th>\n  //        </tr>\n  //      </thead>\n  //      <tbody>{recordList()}</tbody>\n  //    </table>\n  //  </div>\n );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}